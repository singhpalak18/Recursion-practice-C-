void f(int i,int target,vector<int>& candidates,vector<int>&vec,vector<vector<int>>&ans)
    {
       if(target==0)
       {
           ans.push_back(vec);
           return;
       }
       if(target<0 || i>=candidates.size()) return;
       vec.push_back(candidates[i]);
       f(i,target-candidates[i],candidates,vec,ans);
       vec.pop_back();
       f(i+1,target,candidates,vec,ans);
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>>ans;
        vector<int>vec;
        f(0,target,candidates,vec,ans);
        return ans;
    }
